name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run go vet
      run: go vet ./...

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.64.8
        args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run tests with race detection
      run: |
        # Run tests and capture exit code
        go test -race -coverprofile=coverage.out ./... || TEST_EXIT_CODE=$?

        # Always generate coverage report
        go tool cover -func=coverage.out || true

        # Display coverage percentage
        coverage=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//' || echo "0")
        echo "Coverage: $coverage%"

        # Exit with the original test exit code
        exit ${TEST_EXIT_CODE:-0}
      continue-on-error: true

    - name: Upload coverage report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always() && !contains(needs.*.result, 'failure')

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      run: go build -v -o gh-code-search

    - name: Test binary
      run: ./gh-code-search --help
